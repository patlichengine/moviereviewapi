"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
jest.setTimeout(10000);
const db = (0, __1.default)({
    bigIntMode: 'bigint',
    poolSize: 1,
});
afterAll(async () => {
    await db.dispose();
});
test('transaction in task', async () => {
    await db.task(async (db) => {
        const taskDb = db;
        await db.tx(async (db) => {
            await db.query((0, __1.sql) `SELECT 1 + 1`);
            await db.addPostCommitStep(async () => {
                // This code runs after the transaction completes
                await taskDb.query((0, __1.sql) `SELECT 1 + 1`);
            });
        });
    });
});
test('tx in pool', async () => {
    const poolDb = db;
    await db.tx(async (db) => {
        await db.query((0, __1.sql) `SELECT 1 + 1`);
        await db.addPostCommitStep(async () => {
            // This code runs after the transaction completes
            await poolDb.query((0, __1.sql) `SELECT 1 + 1`);
        });
    });
});
//# sourceMappingURL=release-connetions-before-post-commit.test.pg.js.map